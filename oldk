if ! check_for_checkpoint "kraken2"; then
    DBNAME=$(get_config_value "Kraken2" "dbname")
    if [[ -z "$DBNAME" ]]; then
        read -p "No Kraken2 database location found in the config. Do you have an existing Kraken2 database? (yes/no): " has_kraken_db
        if [[ "$has_kraken_db" == "yes" ]]; then
            read -p "Enter the location of your existing Kraken2 database: " DBNAME
        else
            read -p "Enter a location for your new Kraken2 database: " DBNAME
            echo "Creating and building new Kraken2 database at $DBNAME..."
	    mkdir -p "$DBNAME"
            if ! kraken2-build --standard --db "$DBNAME"; then
                echo "Standard database build failed. Attempting to download prebuilt database..."
                wget -O "$DBNAME/k2_standard_20240112.tar.gz" https://genome-idx.s3.amazonaws.com/kraken/k2_standard_20240112.tar.gz
		if [ $? -eq 0 ]; then
                    echo "Extracting database..."
		    tar -xzf "$DBNAME/k2_standard_20240112.tar.gz" -C "$DBNAME" --strip-components=1 
		    rm "$DBNAME/k2_standard_20240112.tar.gz"
		    echo "Prebuilt database downloaded and extracted."
                else
                    echo "Failed to download the prebuilt database. Please check your internet connection or the URL and try again."
                    exit 1
                fi
            fi
	    sed -i "/^\[Kraken2\]/,/^\[/ {/^dbname=/ s|=.*|=$DBNAME|}" "$config_file"
            echo "Kraken2 database location updated in config: $DBNAME"
        fi
    else
        echo "Found Kraken2 database location in config: $DBNAME"
    fi
    echo "Database $DBNAME setup complete."
    echo "Running Kraken2 analysis using the database $DBNAME..."
    kraken2 --db "$DBNAME" $DATA_OUTPUT_PATH/metawrap/final_bins/metawrap_70_10_bins --output $DATA_OUTPUT_PATH/kraken2/kraken2_output.txt --report $DATA_OUTPUT_PATH/kraken2/kraken2_report.txt 
    create_checkpoint "kraken2"
fi
